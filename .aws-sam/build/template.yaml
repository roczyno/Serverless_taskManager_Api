AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'TaskManagerApi

  Sample SAM Template for TaskManagerApi

  '
Globals:
  Function:
    Timeout: 20
    Runtime: java17
    Architectures:
    - x86_64
    MemorySize: 512
    Environment:
      Variables:
        TM_COGNITO_POOL_CLIENT_ID: 2hac15m5nrvsq4anq49mitpker
        TM_COGNITO_POOL_SECRET_ID: 2gvqhs28u14pbm08ar1d8h0f6hp6blp4rkaehu8p6ehfvme53cm
        TM_COGNITO_USER_POOL_ID: eu-west-1_HFpwlSV34
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: TaskManagerLambdaAuthorizer
        Authorizers:
          TaskManagerLambdaAuthorizer:
            FunctionArn:
              Fn::GetAtt:
              - LambdaAuthorizerFunction
              - Arn
            FunctionInvokeRole:
              Fn::GetAtt:
              - LambdaAuthorizerRole
              - Arn
            Identity:
              Header: Authorization
              ValidationExpression: Bearer.*
              ReauthorizeEvery: 300
  RegisterUserHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RegisterUserHandlerFunction
      Handler: com.roczyno.aws.task_manager.RegisterUserHandler::handleRequest
      Events:
        RegisterUser:
          Type: Api
          Properties:
            Path: /register
            Method: post
            RestApiId:
              Ref: MyApi
    Metadata:
      SamResourceId: RegisterUserHandlerFunction
  ConfirmUserHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ConfirmUserHandlerFunction
      Handler: com.roczyno.aws.task_manager.ConfirmUserHandler::handleRequest
      Events:
        ConfirmUser:
          Type: Api
          Properties:
            Path: /confirm
            Method: post
            RestApiId:
              Ref: MyApi
    Metadata:
      SamResourceId: ConfirmUserHandlerFunction
  LoginUserHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LoginUserHandlerFunction
      Handler: com.roczyno.aws.task_manager.LoginUserHandler::handleRequest
      Events:
        LoginUser:
          Type: Api
          Properties:
            Path: /login
            Method: post
            RestApiId:
              Ref: MyApi
    Metadata:
      SamResourceId: LoginUserHandlerFunction
  AddUserHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AddUserHandlerFunction
      Handler: com.roczyno.aws.task_manager.AddUserHandler::handleRequest
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          Resource: arn:aws:cognito-idp:eu-west-1:897729111286:userpool/eu-west-1_HFpwlSV34
      Events:
        AddUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
            RestApiId:
              Ref: MyApi
            Auth:
              Authorizer: TaskManagerLambdaAuthorizer
    Metadata:
      SamResourceId: AddUserHandlerFunction
  GetUserHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetUserHandlerFunction
      Handler: com.roczyno.aws.task_manager.GetUserHandler::handleRequest
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /user/me
            Method: get
            RestApiId:
              Ref: MyApi
    Metadata:
      SamResourceId: GetUserHandlerFunction
  LambdaAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LambdaAuthorizerFunction
      Handler: com.roczyno.aws.task_manager.authorizer.LambdaAuthorizer::handleRequest
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:GetUser
          Resource: arn:aws:cognito-idp:eu-west-1:897729111286:userpool/eu-west-1_HFpwlSV34
    Metadata:
      SamResourceId: LambdaAuthorizerFunction
  LambdaAuthorizerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: InvokeLambdaAuthorizer
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
              Fn::GetAtt:
              - LambdaAuthorizerFunction
              - Arn
Outputs:
  CreateUserApi:
    Description: API Gateway endpoint URL for Prod stage for CreateUserHandler Function
    Value:
      Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users/
  RegisterUserHandlerFunction:
    Description: RegisterUserHandler Lambda Function ARN
    Value:
      Fn::GetAtt:
      - RegisterUserHandlerFunction
      - Arn
  RegisterUserHandlerFunctionIamRole:
    Description: Implicit IAM Role created for CreateUserHandler
    Value:
      Fn::GetAtt:
      - RegisterUserHandlerFunctionRole
      - Arn
  ConfirmUserApi:
    Description: API Gateway endpoint URL for Prod stage for ConfirmUserHandler Function
    Value:
      Fn::Sub: https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/confirm/
  ConfirmUserHandlerFunction:
    Description: ConfirmUserHandler Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ConfirmUserHandlerFunction
      - Arn
  ConfirmUserHandlerFunctionIamRole:
    Description: Implicit IAM Role created for ConfirmUserHandler
    Value:
      Fn::GetAtt:
      - ConfirmUserHandlerFunctionRole
      - Arn
